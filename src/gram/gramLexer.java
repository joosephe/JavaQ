// Generated from gram.g4 by ANTLR 4.2
package gram;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class gramLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__35=1, T__34=2, T__33=3, T__32=4, T__31=5, T__30=6, T__29=7, T__28=8, 
		T__27=9, T__26=10, T__25=11, T__24=12, T__23=13, T__22=14, T__21=15, T__20=16, 
		T__19=17, T__18=18, T__17=19, T__16=20, T__15=21, T__14=22, T__13=23, 
		T__12=24, T__11=25, T__10=26, T__9=27, T__8=28, T__7=29, T__6=30, T__5=31, 
		T__4=32, T__3=33, T__2=34, T__1=35, T__0=36, Name=37, String=38, Number=39, 
		WS=40;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"','", "'while'", "'*'", "'-'", "'('", "'if'", "'ensemble'", "'<'", "'int'", 
		"'!='", "' &'", "'<='", "'state'", "'{'", "'gate'", "'else'", "'}'", "'float'", 
		"'elseif'", "'char'", "'qubit'", "')'", "'bool'", "'+'", "'transformation'", 
		"'='", "'circuit'", "';'", "'complex'", "'>'", "'measurement'", "'string'", 
		"'/'", "'=='", "'>='", "'|'", "Name", "String", "Number", "WS"
	};
	public static final String[] ruleNames = {
		"T__35", "T__34", "T__33", "T__32", "T__31", "T__30", "T__29", "T__28", 
		"T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", "T__20", 
		"T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", 
		"T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", 
		"T__2", "T__1", "T__0", "Name", "String", "Number", "WS"
	};


	public gramLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "gram.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2*\u0114\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\3\2\3\2\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3\b"+
		"\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3"+
		"\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\20"+
		"\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\23\3\23"+
		"\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 "+
		"\3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3&\3"+
		"&\7&\u00f6\n&\f&\16&\u00f9\13&\3\'\3\'\3\'\3\'\3(\3(\3(\7(\u0102\n(\f"+
		"(\16(\u0105\13(\5(\u0107\n(\3(\3(\6(\u010b\n(\r(\16(\u010c\5(\u010f\n"+
		"(\3)\3)\3)\3)\2\2*\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r"+
		"\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*\3\2\t\4\2C\\c|\6\2\62;C\\"+
		"aac|\5\2\f\f\17\17$$\3\2\62\62\3\2\63;\3\2\62;\4\2\13\f\"\"\u0118\2\3"+
		"\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2"+
		"\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31"+
		"\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2"+
		"\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2"+
		"\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2"+
		"\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2"+
		"I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\3S\3\2\2\2\5U\3"+
		"\2\2\2\7[\3\2\2\2\t]\3\2\2\2\13_\3\2\2\2\ra\3\2\2\2\17d\3\2\2\2\21m\3"+
		"\2\2\2\23o\3\2\2\2\25s\3\2\2\2\27v\3\2\2\2\31y\3\2\2\2\33|\3\2\2\2\35"+
		"\u0082\3\2\2\2\37\u0084\3\2\2\2!\u0089\3\2\2\2#\u008e\3\2\2\2%\u0090\3"+
		"\2\2\2\'\u0096\3\2\2\2)\u009d\3\2\2\2+\u00a2\3\2\2\2-\u00a8\3\2\2\2/\u00aa"+
		"\3\2\2\2\61\u00af\3\2\2\2\63\u00b1\3\2\2\2\65\u00c0\3\2\2\2\67\u00c2\3"+
		"\2\2\29\u00ca\3\2\2\2;\u00cc\3\2\2\2=\u00d4\3\2\2\2?\u00d6\3\2\2\2A\u00e2"+
		"\3\2\2\2C\u00e9\3\2\2\2E\u00eb\3\2\2\2G\u00ee\3\2\2\2I\u00f1\3\2\2\2K"+
		"\u00f3\3\2\2\2M\u00fa\3\2\2\2O\u0106\3\2\2\2Q\u0110\3\2\2\2ST\7.\2\2T"+
		"\4\3\2\2\2UV\7y\2\2VW\7j\2\2WX\7k\2\2XY\7n\2\2YZ\7g\2\2Z\6\3\2\2\2[\\"+
		"\7,\2\2\\\b\3\2\2\2]^\7/\2\2^\n\3\2\2\2_`\7*\2\2`\f\3\2\2\2ab\7k\2\2b"+
		"c\7h\2\2c\16\3\2\2\2de\7g\2\2ef\7p\2\2fg\7u\2\2gh\7g\2\2hi\7o\2\2ij\7"+
		"d\2\2jk\7n\2\2kl\7g\2\2l\20\3\2\2\2mn\7>\2\2n\22\3\2\2\2op\7k\2\2pq\7"+
		"p\2\2qr\7v\2\2r\24\3\2\2\2st\7#\2\2tu\7?\2\2u\26\3\2\2\2vw\7\"\2\2wx\7"+
		"(\2\2x\30\3\2\2\2yz\7>\2\2z{\7?\2\2{\32\3\2\2\2|}\7u\2\2}~\7v\2\2~\177"+
		"\7c\2\2\177\u0080\7v\2\2\u0080\u0081\7g\2\2\u0081\34\3\2\2\2\u0082\u0083"+
		"\7}\2\2\u0083\36\3\2\2\2\u0084\u0085\7i\2\2\u0085\u0086\7c\2\2\u0086\u0087"+
		"\7v\2\2\u0087\u0088\7g\2\2\u0088 \3\2\2\2\u0089\u008a\7g\2\2\u008a\u008b"+
		"\7n\2\2\u008b\u008c\7u\2\2\u008c\u008d\7g\2\2\u008d\"\3\2\2\2\u008e\u008f"+
		"\7\177\2\2\u008f$\3\2\2\2\u0090\u0091\7h\2\2\u0091\u0092\7n\2\2\u0092"+
		"\u0093\7q\2\2\u0093\u0094\7c\2\2\u0094\u0095\7v\2\2\u0095&\3\2\2\2\u0096"+
		"\u0097\7g\2\2\u0097\u0098\7n\2\2\u0098\u0099\7u\2\2\u0099\u009a\7g\2\2"+
		"\u009a\u009b\7k\2\2\u009b\u009c\7h\2\2\u009c(\3\2\2\2\u009d\u009e\7e\2"+
		"\2\u009e\u009f\7j\2\2\u009f\u00a0\7c\2\2\u00a0\u00a1\7t\2\2\u00a1*\3\2"+
		"\2\2\u00a2\u00a3\7s\2\2\u00a3\u00a4\7w\2\2\u00a4\u00a5\7d\2\2\u00a5\u00a6"+
		"\7k\2\2\u00a6\u00a7\7v\2\2\u00a7,\3\2\2\2\u00a8\u00a9\7+\2\2\u00a9.\3"+
		"\2\2\2\u00aa\u00ab\7d\2\2\u00ab\u00ac\7q\2\2\u00ac\u00ad\7q\2\2\u00ad"+
		"\u00ae\7n\2\2\u00ae\60\3\2\2\2\u00af\u00b0\7-\2\2\u00b0\62\3\2\2\2\u00b1"+
		"\u00b2\7v\2\2\u00b2\u00b3\7t\2\2\u00b3\u00b4\7c\2\2\u00b4\u00b5\7p\2\2"+
		"\u00b5\u00b6\7u\2\2\u00b6\u00b7\7h\2\2\u00b7\u00b8\7q\2\2\u00b8\u00b9"+
		"\7t\2\2\u00b9\u00ba\7o\2\2\u00ba\u00bb\7c\2\2\u00bb\u00bc\7v\2\2\u00bc"+
		"\u00bd\7k\2\2\u00bd\u00be\7q\2\2\u00be\u00bf\7p\2\2\u00bf\64\3\2\2\2\u00c0"+
		"\u00c1\7?\2\2\u00c1\66\3\2\2\2\u00c2\u00c3\7e\2\2\u00c3\u00c4\7k\2\2\u00c4"+
		"\u00c5\7t\2\2\u00c5\u00c6\7e\2\2\u00c6\u00c7\7w\2\2\u00c7\u00c8\7k\2\2"+
		"\u00c8\u00c9\7v\2\2\u00c98\3\2\2\2\u00ca\u00cb\7=\2\2\u00cb:\3\2\2\2\u00cc"+
		"\u00cd\7e\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7o\2\2\u00cf\u00d0\7r\2\2"+
		"\u00d0\u00d1\7n\2\2\u00d1\u00d2\7g\2\2\u00d2\u00d3\7z\2\2\u00d3<\3\2\2"+
		"\2\u00d4\u00d5\7@\2\2\u00d5>\3\2\2\2\u00d6\u00d7\7o\2\2\u00d7\u00d8\7"+
		"g\2\2\u00d8\u00d9\7c\2\2\u00d9\u00da\7u\2\2\u00da\u00db\7w\2\2\u00db\u00dc"+
		"\7t\2\2\u00dc\u00dd\7g\2\2\u00dd\u00de\7o\2\2\u00de\u00df\7g\2\2\u00df"+
		"\u00e0\7p\2\2\u00e0\u00e1\7v\2\2\u00e1@\3\2\2\2\u00e2\u00e3\7u\2\2\u00e3"+
		"\u00e4\7v\2\2\u00e4\u00e5\7t\2\2\u00e5\u00e6\7k\2\2\u00e6\u00e7\7p\2\2"+
		"\u00e7\u00e8\7i\2\2\u00e8B\3\2\2\2\u00e9\u00ea\7\61\2\2\u00eaD\3\2\2\2"+
		"\u00eb\u00ec\7?\2\2\u00ec\u00ed\7?\2\2\u00edF\3\2\2\2\u00ee\u00ef\7@\2"+
		"\2\u00ef\u00f0\7?\2\2\u00f0H\3\2\2\2\u00f1\u00f2\7~\2\2\u00f2J\3\2\2\2"+
		"\u00f3\u00f7\t\2\2\2\u00f4\u00f6\t\3\2\2\u00f5\u00f4\3\2\2\2\u00f6\u00f9"+
		"\3\2\2\2\u00f7\u00f5\3\2\2\2\u00f7\u00f8\3\2\2\2\u00f8L\3\2\2\2\u00f9"+
		"\u00f7\3\2\2\2\u00fa\u00fb\7$\2\2\u00fb\u00fc\n\4\2\2\u00fc\u00fd\7$\2"+
		"\2\u00fdN\3\2\2\2\u00fe\u0107\t\5\2\2\u00ff\u0103\t\6\2\2\u0100\u0102"+
		"\t\7\2\2\u0101\u0100\3\2\2\2\u0102\u0105\3\2\2\2\u0103\u0101\3\2\2\2\u0103"+
		"\u0104\3\2\2\2\u0104\u0107\3\2\2\2\u0105\u0103\3\2\2\2\u0106\u00fe\3\2"+
		"\2\2\u0106\u00ff\3\2\2\2\u0107\u010e\3\2\2\2\u0108\u010a\7\60\2\2\u0109"+
		"\u010b\t\7\2\2\u010a\u0109\3\2\2\2\u010b\u010c\3\2\2\2\u010c\u010a\3\2"+
		"\2\2\u010c\u010d\3\2\2\2\u010d\u010f\3\2\2\2\u010e\u0108\3\2\2\2\u010e"+
		"\u010f\3\2\2\2\u010fP\3\2\2\2\u0110\u0111\t\b\2\2\u0111\u0112\3\2\2\2"+
		"\u0112\u0113\b)\2\2\u0113R\3\2\2\2\b\2\u00f7\u0103\u0106\u010c\u010e\3"+
		"\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}